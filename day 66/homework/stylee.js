 
// Easy
// დავალება NUM 1: შექმენი ფუნქცია, რომელიც მიიღებს რიცხვს და პირობით შეამოწმებს, არის თუ არა ის კენტი ან ლუწი.
// function even_or_odd(number) {
//     if (number % 2 == 0) {
//         console.log("Your number is Even");
//     } else {
//         console.log("Your number is Odd");
//     }
// }

// დავალება NUM 2: შექმენი პირობა, რომელიც შეამოწმებს, არის თუ არა სია ცარიელი და თუ არა, იპოვოს რიცხვების ჯამი.
// function liste(llist){
//     if (llist === ' '){
//        console.log("Sum of your list is 0") 
//     }else{
//         let sum = 0;
//         for(let i = 0; i < llist.length; i++){
//             if(typeof llist[i] === 'number'){
//                 sum += llist[i];
//             }
//         }
//         console.log("Sum of your list is: " + sum)
//     }
// }



// დავალება NUM 2: შექმენი ფუნქცია, რომელიც მიიღებს რიცხვების სიას და დააბრუნებს მათ საშუალო არითმეტიკულს.
// function mathh(ys){
//     let sum = 0;
//             for(let i = 0; i < ys.length; i++){
//                 if(typeof ys[i] === 'number'){
//                     sum += ys[i];
//                 }
// }
// console.log(sum/ys.length)
// }

// mathh([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) 

  
// დავალება NUM 3: შექმენი ფუნქცია, რომელიც მიიღებს რიცხვების სიას, გაამრავლებს ყველა რიცხვს 3-ზე და დაიბრუნებს მხოლოდ იმ რიცხვებს, 
// რომლებიც 20-ზე მეტია.

// Medium
// დავალება NUM 4: შექმენი პირობა, რომელიც შეამოწმებს სიაში უდიდეს რიცხვს და დააბრუნებს მას.
// დავალება NUM 5: დაწერე ფუნქცია, რომელიც მიიღებს ორ რიცხვს და პირობით შეამოწმებს, თუ მათი ნამრავლი 100-ზე მეტია.

// Chad
// დავალება NUM 6: შექმენი ფუნქცია, რომელიც მიიღებს ტექსტს და შეამოწმებს, თუ ტექსტის პირველ და ბოლო ასოები ერთნაირია.
// დავალება NUM 7: შექმენი ფუნქცია, რომელიც მიიღებს ტექსტს და დააბრუნებს თითოეული ასოს სიხშირეს, ანუ რამდენჯერ გვხვდება თითოეული ასო ტექსტში.

// Giga chad
// დავალება NUM 8: შექმენი ფუნქცია, რომელიც მიიღებს ტექსტს და შეამოწმებს, არის თუ არა ის პალინდრომი (ტექსტი, რომელიც წაკითხვისას ერთნაირად ჩანს როგორც წინ და უკან, მაგალითად: "level").